{"version":3,"file":"static\\development\\pages\\register.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/ErrorMessage.tsx","webpack:///./components/Login.tsx","webpack:///./components/Register.tsx","webpack:///./components/styles/Form.ts","webpack:///./graphql/mutations/LoginMutation.ts","webpack:///./graphql/mutations/RegisterMutation.ts","webpack:///./graphql/queries/CurrentUserQuery.ts","webpack:///./pages/register.tsx","webpack:///external \"graphql-tag\"","webpack:///external \"react\"","webpack:///external \"react-apollo\"","webpack:///external \"styled-components\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ErrorStyles = styled.div`\r\n  padding: 2rem;\r\n  background: white;\r\n  margin: 2rem 0;\r\n  border: 1px solid rgba(0, 0, 0, 0.05);\r\n  border-left: 5px solid red;\r\n  p {\r\n    margin: 0;\r\n    font-weight: 100;\r\n  }\r\n  strong {\r\n    margin-right: 1rem;\r\n  }\r\n`;\r\n\r\nexport const ErrorMessage = ({ error }: any) => {\r\n\r\n  if (!error || !error.message) {\r\n    return null;\r\n  }\r\n\r\n  const { networkError } = error;\r\n\r\n  if (\r\n    networkError &&\r\n    networkError.result &&\r\n    networkError.result.errors.length\r\n  ) {\r\n    return networkError.result.errors.map((newError: any, index: any) => (\r\n      <ErrorStyles key={index}>\r\n        <p data-test=\"graphql-error\">\r\n          <strong>Shoot!</strong>\r\n          {newError.message.replace('GraphQL error: ', '')}\r\n        </p>\r\n      </ErrorStyles>\r\n    ));\r\n  }\r\n  return (\r\n    <ErrorStyles>\r\n      <p data-test=\"graphql-error\">\r\n        <strong>Shoot!</strong>\r\n        {error.message.replace('GraphQL error: ', '')}\r\n      </p>\r\n    </ErrorStyles>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { Mutation } from 'react-apollo';\r\nimport { LoginMutation, LoginMutationVariables } from '../graphql/schemaTypes';\r\nimport { LOGIN_MUTATION } from '../graphql/mutations/LoginMutation';\r\nimport { CURRENT_USER_QUERY } from '../graphql/queries/CurrentUserQuery';\r\nimport {\r\n  InputElementEvent,\r\n  FormElementEvent\r\n} from '../interfaces/shared/FormEvents';\r\nimport { LoginProps, LoginState } from '../interfaces/Login.interface';\r\n\r\nimport { Form } from './styles/Form';\r\nimport { ErrorMessage } from './ErrorMessage';\r\n\r\nexport class Login extends React.Component<LoginProps, LoginState> {\r\n  state: LoginState = {\r\n    email: '',\r\n    password: ''\r\n  };\r\n\r\n  handleChange = (event: InputElementEvent) => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { email, password } = this.state;\r\n\r\n    return (\r\n      <Mutation<LoginMutation, LoginMutationVariables>\r\n        mutation={LOGIN_MUTATION}\r\n        variables={this.state}\r\n        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\r\n      >\r\n        {(login, { error, loading }) => {\r\n          return (\r\n            <Form\r\n              method=\"post\"\r\n              onSubmit={(event: FormElementEvent) => {\r\n                event.preventDefault();\r\n                login();\r\n                this.setState({\r\n                  email: '',\r\n                  password: ''\r\n                });\r\n              }}\r\n            >\r\n              <fieldset disabled={loading} aria-busy={loading}>\r\n                <h2>Please Login</h2>\r\n                <ErrorMessage error={error} />\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"Email\"\r\n                />\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  value={password}\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"Password\"\r\n                />\r\n                <button type=\"submit\">Login</button>\r\n              </fieldset>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Mutation } from 'react-apollo';\r\nimport {\r\n  RegisterMutation,\r\n  RegisterMutationVariables\r\n} from '../graphql/schemaTypes';\r\nimport { REGISTER_MUTATION } from '../graphql/mutations/RegisterMutation';\r\nimport { CURRENT_USER_QUERY } from '../graphql/queries/CurrentUserQuery';\r\nimport {\r\n  InputElementEvent,\r\n  FormElementEvent\r\n} from '../interfaces/shared/FormEvents';\r\nimport { RegisterProps, RegisterState } from '../interfaces/Register.interface';\r\n\r\nimport { Form } from './styles/Form';\r\nimport { ErrorMessage } from './ErrorMessage';\r\n\r\nexport class Register extends React.Component<RegisterProps, RegisterState> {\r\n  state: RegisterState = {\r\n    email: '',\r\n    name: '',\r\n    password: ''\r\n  };\r\n\r\n  handleChange = (event: InputElementEvent) => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { email, name, password } = this.state;\r\n\r\n    return (\r\n      <Mutation<RegisterMutation, RegisterMutationVariables>\r\n        mutation={REGISTER_MUTATION}\r\n        variables={this.state}\r\n        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\r\n      >\r\n        {(register, { error, loading }) => {\r\n          return (\r\n            <Form\r\n              method=\"post\"\r\n              onSubmit={(event: FormElementEvent) => {\r\n                event.preventDefault();\r\n                register();\r\n                this.setState({\r\n                  email: '',\r\n                  name: '',\r\n                  password: ''\r\n                });\r\n              }}\r\n            >\r\n              <fieldset disabled={loading} aria-busy={loading}>\r\n                <h2>Register For An Account</h2>\r\n                <ErrorMessage error={error} />\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"Email\"\r\n                />\r\n                <label htmlFor=\"Name\">Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"Name\"\r\n                />\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  value={password}\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"Password\"\r\n                />\r\n                <button type=\"submit\">Register</button>\r\n              </fieldset>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\n","import styled, { keyframes } from 'styled-components';\r\n\r\nconst loading = keyframes`\r\n  from {\r\n    background-position: 0 0;\r\n    /* rotate: 0; */\r\n  }\r\n\r\n  to {\r\n    background-position: 100% 100%;\r\n    /* rotate: 360deg; */\r\n  }\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  box-shadow: 0 0 5px 3px rgba(0, 0, 0, 0.05);\r\n  background: rgba(0, 0, 0, 0.02);\r\n  border: 5px solid white;\r\n  padding: 20px;\r\n  font-size: 1.5rem;\r\n  line-height: 1.5;\r\n  font-weight: 600;\r\n  label {\r\n    display: block;\r\n    margin-bottom: 1rem;\r\n  }\r\n  input,\r\n  textarea,\r\n  select {\r\n    width: 100%;\r\n    padding: 0.5rem;\r\n    font-size: 1rem;\r\n    border: 1px solid black;\r\n    &:focus {\r\n      outline: 0;\r\n      border-color: ${({ theme }) => theme.red};\r\n    }\r\n  }\r\n  button,\r\n  input[type='submit'] {\r\n    width: auto;\r\n    background: red;\r\n    color: white;\r\n    border: 0;\r\n    font-size: 2rem;\r\n    font-weight: 600;\r\n    padding: 0.5rem 1.2rem;\r\n  }\r\n  fieldset {\r\n    border: 0;\r\n    padding: 0;\r\n\r\n    &[disabled] {\r\n      opacity: 0.5;\r\n    }\r\n    &::before {\r\n      height: 10px;\r\n      content: '';\r\n      display: block;\r\n      background-image: linear-gradient(\r\n        to right,\r\n        #ff3019 0%,\r\n        #e2b04a 50%,\r\n        #ff3019 100%\r\n      );\r\n    }\r\n    &[aria-busy='true']::before {\r\n      background-size: 50% auto;\r\n      animation: ${loading} 0.5s linear infinite;\r\n    }\r\n  }\r\n`;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const LOGIN_MUTATION = gql`\r\n  mutation LOGIN_MUTATION($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      id\r\n      email\r\n      name\r\n    }\r\n  }\r\n`;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const REGISTER_MUTATION = gql`\r\n  mutation REGISTER_MUTATION(\r\n    $email: String!\r\n    $name: String!\r\n    $password: String!\r\n  ) {\r\n    register(email: $email, name: $name, password: $password) {\r\n      id\r\n      email\r\n      name\r\n    }\r\n  }\r\n`;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const CURRENT_USER_QUERY = gql`\r\n  query CURRENT_USER_QUERY {\r\n    me {\r\n      id\r\n      email\r\n      name\r\n      permissions\r\n    }\r\n  }\r\n`;\r\n","import * as React from 'react';\r\nimport { Register } from '../components/Register';\r\nimport { Login } from '../components/Login';\r\nimport styled from 'styled-components';\r\n\r\nconst Columns = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n  grid-gap: 20px;\r\n`;\r\n\r\nconst RegisterPage = () => (\r\n  <Columns>\r\n    <Register />\r\n    <Login />\r\n  </Columns>\r\n);\r\n\r\nexport default RegisterPage;\r\n","module.exports = require(\"graphql-tag\");","module.exports = require(\"react\");","module.exports = require(\"react-apollo\");","module.exports = require(\"styled-components\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AAEA;AAeA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAQA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AACA;AAEA;AACA;AAOA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAEA;AACA;AAFA;AACA;AAFA;AAMA;AAAA;AAAA;AACA;AAEA;AAIA;AACA;AAdA;AAAA;AACA;AADA;AAAA;AAAA;AAeA;AACA;AADA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;AA/DA;AACA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AAKA;AACA;AAOA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAEA;AACA;AACA;AAHA;AACA;AAFA;AAOA;AAAA;AAAA;AACA;AAEA;AAIA;AACA;AAfA;AAAA;AACA;AADA;AAAA;AAAA;AAgzEA;AACA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AAEA;AAYA;AAqBA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AAEA;AACA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AACA;AAMA;;;;;;;;;;;;;;;;;;;;;;;AClBA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}