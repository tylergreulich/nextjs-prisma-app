{"version":3,"file":"static/webpack/static\\development\\pages\\update.js.7c600a52c36bea5710f1.hot-update.js","sources":["webpack:///./components/UpdateItem.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { Mutation, Query, MutationFn } from 'react-apollo';\r\nimport { Form } from './styles/Form';\r\nimport {\r\n  CreateItemMutation,\r\n  CreateItemMutationVariables,\r\n  SingleItemQuery,\r\n  SingleItemQueryVariables\r\n} from '../graphql/schemaTypes';\r\nimport { UpdateItemProps } from '../interfaces/UpdateItem.interface';\r\nimport { UPDATE_ITEM_MUTATION } from '../graphql/mutations/UpdateItem';\r\nimport { SINGLE_ITEM_QUERY } from '../graphql/queries/SingleItem';\r\nimport {\r\n  TextAreaOrInputElementEvent,\r\n  FormElementEvent\r\n} from '../interfaces/shared/FormEvents';\r\nimport { ErrorMesssage } from './ErrorMessage';\r\n\r\nexport class UpdateItem extends React.Component<UpdateItemProps> {\r\n  state = {};\r\n\r\n  updateItem = async (\r\n    event: FormElementEvent,\r\n    updateItemMutation: MutationFn\r\n  ) => {\r\n    event.preventDefault();\r\n    const res = await updateItemMutation({\r\n      variables: {\r\n        id: this.props.id,\r\n        ...this.state\r\n      }\r\n    });\r\n\r\n    console.log(res);\r\n  };\r\n\r\n  handleChange = (event: TextAreaOrInputElementEvent) => {\r\n    const { name, type, value } = event.currentTarget;\r\n\r\n    const val = type === 'number' ? parseFloat(value) : value;\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      [name]: val\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { id } = this.props;\r\n\r\n    return (\r\n      <Query<SingleItemQuery, SingleItemQueryVariables>\r\n        query={SINGLE_ITEM_QUERY}\r\n        variables={{ id }}\r\n      >\r\n        {({ data, loading }) => {\r\n          if (loading || !data) {\r\n            return <p>Loading...</p>;\r\n          }\r\n\r\n          if (!data.item) {\r\n            return <p>No item found for {id}</p>;\r\n          }\r\n\r\n          return (\r\n            <Mutation<CreateItemMutation, CreateItemMutationVariables>\r\n              mutation={UPDATE_ITEM_MUTATION}\r\n              variables={this.state}\r\n            >\r\n              {(updateItem, { loading, error }) => (\r\n                <Form\r\n                  onSubmit={(event: FormElementEvent) =>\r\n                    this.updateItem(event, updateItem)\r\n                  }\r\n                >\r\n                  <ErrorMesssage error={error} />\r\n                  <fieldset disabled={loading} aria-busy={loading}>\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"title\"\r\n                      name=\"title\"\r\n                      placeholder=\"Title\"\r\n                      required={true}\r\n                      defaultValue={data.item.title}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                    <label htmlFor=\"price\">Price</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      id=\"price\"\r\n                      name=\"price\"\r\n                      placeholder=\"Price\"\r\n                      required={true}\r\n                      defaultValue={data.item.price.toString()}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                    <label htmlFor=\"description\">Description</label>\r\n                    <textarea\r\n                      id=\"description\"\r\n                      name=\"description\"\r\n                      placeholder=\"Enter A Description\"\r\n                      required={true}\r\n                      defaultValue={data.item.description}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                    <button type=\"submit\">\r\n                      Sav\r\n                      {loading ? 'ing' : 'e'} Changes\r\n                    </button>\r\n                  </fieldset>\r\n                </Form>\r\n              )}\r\n            </Mutation>\r\n          );\r\n        }}\r\n      </Query>\r\n    );\r\n  }\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAQA;AACA;AAKA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAIA;AAJA;AAAA;AAMA;AACA;AADA;AADA;AACA;AANA;AAKA;AAOA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AADA;AAkBA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAIA;AACA;AA5BA;AAAA;AACA;AADA;AAAA;AAAA;AA6BA;AACA;AADA;AAGA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAEA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AArCA;AA8CA;AAGA;AApGA;AACA;AADA;AAAA;;;;A","sourceRoot":""}