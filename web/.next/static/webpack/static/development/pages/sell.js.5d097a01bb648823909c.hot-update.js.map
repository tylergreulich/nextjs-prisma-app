{"version":3,"file":"static/webpack/static\\development\\pages\\sell.js.5d097a01bb648823909c.hot-update.js","sources":["webpack:///./components/CreateItem.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { Mutation } from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\nimport Router from 'next/router';\r\nimport axios from 'axios';\r\n\r\nimport { Form } from './styles/Form';\r\nimport {\r\n  CreateItemMutationVariables,\r\n  CreateItemMutation\r\n} from '../graphql/schemaTypes';\r\nimport { ErrorMesssage } from './ErrorMessage';\r\nimport { cloudinaryUrl } from '../config';\r\n\r\ninterface CreateItemState {\r\n  title: string;\r\n  description: string;\r\n  image: string;\r\n  largeImage: string;\r\n  price: number;\r\n}\r\n\r\nexport const CREATE_ITEM_MUTATION = gql`\r\n  mutation CREATE_ITEM_MUTATION(\r\n    $title: String!\r\n    $description: String!\r\n    $image: String\r\n    $largeImage: String\r\n    $price: Int!\r\n  ) {\r\n    createItem(\r\n      title: $title\r\n      description: $description\r\n      image: $image\r\n      largeImage: $largeImage\r\n      price: $price\r\n    ) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport class CreateItem extends React.Component<{}, CreateItemState> {\r\n  state: CreateItemState = {\r\n    title: 'Cool shoes',\r\n    description: 'I love those shoes',\r\n    image: 'dog.jpg',\r\n    largeImage: 'large-dog.jpg',\r\n    price: 1000\r\n  };\r\n\r\n  handleChange = (\r\n    event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    const { name, type, value } = event.currentTarget;\r\n\r\n    const val = type === 'number' ? parseFloat(value) : value;\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      [name]: val\r\n    });\r\n  };\r\n\r\n  uploadFile = async (event: React.FormEvent<HTMLInputElement>) => {\r\n    const { files } = event.currentTarget;\r\n    console.log(files![0]);\r\n\r\n    const uploadFormData = new FormData();\r\n    uploadFormData.append('file', files![0]);\r\n    uploadFormData.append('upload_preset', 'sickfits');\r\n\r\n    const res = await axios.post(`${cloudinaryUrl}`, uploadFormData);\r\n\r\n    console.log(res);\r\n  };\r\n\r\n  render() {\r\n    const { title, description, price } = this.state;\r\n\r\n    return (\r\n      <Mutation<CreateItemMutation, CreateItemMutationVariables>\r\n        mutation={CREATE_ITEM_MUTATION}\r\n        variables={this.state}\r\n      >\r\n        {(createItem, { loading, error }) => (\r\n          <Form\r\n            onSubmit={async (event: React.FormEvent<HTMLFormElement>) => {\r\n              event.preventDefault();\r\n              const { data }: any = await createItem();\r\n              console.log(data);\r\n              Router.push({\r\n                pathname: '/item',\r\n                query: { id: data.createItem.id }\r\n              });\r\n            }}\r\n          >\r\n            <ErrorMesssage error={error} />\r\n            <fieldset disabled={loading} aria-busy={loading}>\r\n              <label htmlFor=\"file\">Image</label>\r\n              <input\r\n                type=\"file\"\r\n                id=\"file\"\r\n                name=\"file\"\r\n                placeholder=\"Upload an image\"\r\n                required={true}\r\n                onChange={this.uploadFile}\r\n              />\r\n              <label htmlFor=\"title\">Title</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"title\"\r\n                name=\"title\"\r\n                placeholder=\"Title\"\r\n                required={true}\r\n                value={title}\r\n                onChange={this.handleChange}\r\n              />\r\n              <label htmlFor=\"price\">Price</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"price\"\r\n                name=\"price\"\r\n                placeholder=\"Price\"\r\n                required={true}\r\n                value={price}\r\n                onChange={this.handleChange}\r\n              />\r\n              <label htmlFor=\"description\">Description</label>\r\n              <textarea\r\n                id=\"description\"\r\n                name=\"description\"\r\n                placeholder=\"Enter A Description\"\r\n                required={true}\r\n                value={description}\r\n                onChange={this.handleChange}\r\n              />\r\n              <button type=\"submit\">Submit</button>\r\n            </fieldset>\r\n          </Form>\r\n        )}\r\n      </Mutation>\r\n    );\r\n  }\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AAUA;AAoBA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AALA;AACA;AAFA;AAWA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAIA;AACA;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AANA;AAAA;AACA;AADA;AAQA;AAEA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAvBA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAmCA;AACA;AADA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AApDA;AA0DA;AArGA;AACA;AADA;AAAA;;;;A","sourceRoot":""}